Initiera Node.js-projekt och installera TypeScript
    npm init -y
    npm install typescript ts-node @types/node --save-dev
-- 

    npm install typescript --save-dev 
Lägger till TypeScript som beroende i ditt projekt.
Gör så att kommandot tsc (TypeScript Compiler) blir tillgängligt via npx tsc.

--

Skapa en tsconfig.json (TypeScript-konfiguration)
    npx tsc --init
- Den genererar en standardfil. Ett exempel på viktig konfiguration

Installera Express (webbserver) och MongoDB-klient
    npm install express mongoose
    npm install @types/express --save-dev

Skapar en source och index
    mkdir src
    touch src/index.ts //Funkar på unix kommandon i mitt fall:
    New-Item -Path "src/index.ts" -ItemType File

För att starta programmet:
    npx ts-node src/index.ts

Men innan dess laddar vi ner MongoDB
    - https://www.mongodb.com/try/download/community

Lägga till Transaktioner

För att se olika transaktioner:
    - http://localhost:5000/api/transactions

API  testning:
    - Thunder Client, inbyggd i vscode

Headern:
    Accept: */*
    User-Agent: Thunder Client (https://www.thunderclient.com)
    Content-Type: application/json

JSON content:
    {
        "type": "expense",
        "amount": 99,
        "category": "Groceries",
        "note": "ICA food"
    }
Svar:
    {
        "type": "expense",
        "amount": 99,
        "category": "Groceries",
        "note": "ICA food",
        "_id": "685a66380715269ffaf091b4",
        "date": "2025-06-24T08:47:52.039Z",
        "__v": 0
    } 


Nästa steg:
Autentisering med JWT

    användare kan logga in

    varje transaktion kopplas till en användare (t.ex. userId)

    man bara ser sina egna transaktioner

--

/register och /login routes

    JWT-tokenhantering

    middleware för skyddade endpoints?

--

frontend (React) som anropar denna backend
    ett formulär för att lägga till transaktion

    en lista som visar dem

    budgetöversikt
